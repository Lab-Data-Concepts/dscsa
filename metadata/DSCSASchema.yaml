metadata:
  

- [855245005019, 65, 0.278]
- [Sammy Sosa  , 63, 0.288]

  
                        "name": "lot",
                        "in": "path",
                        "description": "Lot/Batch Number",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/lotNum"}
                    },
                    {
                        "name": "ser",
                        "in": "path",
                        "description": "Serial Number",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/serialNumber"}
                    },
                    {
                        "name": "exp",

                      "in": "query",
                    "description": "Global Trade Item Number",
                    "required": true
  standard: dscsa
  version: 0.0.01
  description: Implementation of the FDA DSCSA supply chain regulation in a Consortium Blockchain implemented on Ethereum.
  url: https://github.com/Lab-Data-Concepts/dscsa
  references:
    openapi: 3.0.0
    gs1: 1.0.0
schemas:    
  gs1:
    version: 1.0.0
    title: GS1 Verification Messaging Standard
    description: This the API specification for peer-to-peer communication between Verification Router Services or VRS
    contact:
      name: GS1
      url: https://www.gs1.org
      email: gsmp@gs1.org
    servers: 
      - url: https://vrs.example.com/gateway/placeholder
      - schema: https://www.gs1.org/docs/epc/2019_06_30k_GS1_Lightweight_Verification_Messaging_1.1_OpenAPI.json
    paths: 
      /checkConnectivity:
        get: 
          tags: [Test]
          description: Test connection to endpoints
          parameters: [
                {
                    "name": "gtin",
                    "in": "query",
                    "description": "Global Trade Item Number",
                    "required": true,
                    "schema": {"$ref": "#/components/schemas/gtin"}
                },
                {
                    "name": "reqGLN",
                    "in": "query",
                    "description": "Requestor GLN",
                    "required": true,
                    "schema": {"$ref": "#/components/schemas/gln"}
                },
                {
                    "name": "linkType",
                    "in": "query",
                    "description": "Link Type",
                    "required": false,
                    "schema": {"$ref": "#/components/schemas/linkType"}
                },
                {
                    "name": "context",
                    "in": "query",
                    "description": "Verification Context",
                    "required": false,
                    "schema": {"$ref": "#/components/schemas/context"}
                }
            ],
            "responses": {
                "200": {
                    "description": "A response code of 200 means the request was successful and details about the response can be found in the body of the response. Only a 200 response will issue a JSON payload.",
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/ConnectivityCheckResponse"}
                        }
                    }
                },
                "400": {"description": "Bad Request.  The request was not formatted properly. Please verify the request conforms to the specification, and re-issue the request in the correct format."},
                "401": {"description": "Unauthorized.  The request was not allowed because the request did not pass authentication."},
                "403": {"description": "Forbidden.  The request was valid, but the server is refusing to provide a response because the requestor lacks permission."},
                "404": {"description": "Not found.  The requested resource does not exist."},
                "405": {"description": "Method Not Allowed.  The request method is not supported."},
                "408": {"description": "Request Timeout.  The server timed out waiting for the request."},
                "500": {"description": "Internal Server Error.  System failed to process the request because of an error inside the system."},
                "502": {"description": "Bad Gateway.  The server was acting as a gateway or proxy and received an invalid response from the upstream server.  Indicates that one server tried to use another VRS system and that system was down."},
                "503": {"description": "Service Unvailable.  System is undergoing maintenance or is otherwise temporarily unavailable for API queries."},
                "504": {"description": "Gateway Timeout.  The server, while acting as a gateway or proxy, performed multiple retries but did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request."}
            }
        }
        },
        "/verify/gtin/{gtin}/lot/{lot}/ser/{ser}": {
            "get": {
                "tags": ["Verification"],
                "description": "Verify a saleable return",
                "parameters": [
                    {
                        "name": "gtin",
                        "in": "path",
                        "description": "Global Trade Item Number",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/gtin"}
                    },
                    {
                        "name": "lot",
                        "in": "path",
                        "description": "Lot/Batch Number",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/lotNum"}
                    },
                    {
                        "name": "ser",
                        "in": "path",
                        "description": "Serial Number",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/serialNumber"}
                    },
                    {
                        "name": "exp",
                        "in": "query",
                        "description": "Expiry",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/expiryDate"}
                    },
                    {
                        "name": "linkType",
                        "in": "query",
                        "description": "Typed Link",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/linkType"}
                    },
                    {
                        "name": "context",
                        "in": "query",
                        "description": "Verification Context",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/context"}
                    },
                    {
                        "name": "reqGLN",
                        "in": "query",
                        "description": "Requestor GLN",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/gln"}
                    },
                    {
                        "name": "corrUUID",
                        "in": "query",
                        "description": "Correlation UUID",
                        "required": true,
                        "schema": {"$ref": "#/components/schemas/uuid"}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A response code of 200 means the request was successful and details about the response can be found in the body of the response. Only a 200 response will issue a JSON payload.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {"$ref": "#/components/schemas/PositiveVerificationResponse"},
                                        {"$ref": "#/components/schemas/NegativeVerificationResponse"}
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
  components: {
          "schemas": {
              "gln": {
                  "type": "string",
                  "minLength": 13,
                  "maxLength": 13,
                  "example": "9071404000002",
                  "pattern": "^\\d{13}$"
              },
              "gtin": {
                  "type": "string",
                  "minLength": 8,
                  "maxLength": 14,
                  "example": 175304202,
                  "pattern": "^\\d{12,14}|\\d{8}$"
              },
              "lotNum": {
                  "type": "string",
                  "description": "Lot number for the asset to be verified",
                  "example": "LZ109B15"
              },
              "serialNumber": {
                  "type": "string",
                  "description": "Serial number for the asset to be verified",
                  "example": "XYZ12345AB"
              },
              "expiryDate": {
                  "type": "string",
                  "description": "Date of expiry for the item to be looked up in format YYMMDD",
                  "minLength": 6,
                  "maxLength": 6,
                  "example": "170728",
                  "pattern": "^\\d{6}$"
              },
              "uuid": {
                  "type": "string",
                  "description": "Universally Unique Identifier (UUID)",
                  "example": "59bc5c88-15f7-49a7-9687-73b05d2c50a4",
                  "pattern": "^[a-fA-F\\d]{8}-[a-fA-F\\d]{4}-4[a-fA-F\\d]{3}-[89abAB][a-fA-F\\d]{3}-[a-fA-F\\d]{12}$"
              },
              "timestamp": {
                  "type": "string",
                  "description": "A timestamp to millisecond precision, with an explicit timezone indicator (+/-hh:mm) relative to UTC",
                  "example": "2018-08-14T23:29:00.000-08:00",
                  "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]]\\.[0-9]{3}(Z|((\\+|\\-)((0[0-9]|1[0-3]):([0-5][0-9])|14:00)))"
              },
              "linkType": {
                  "type": "string",
                  "enum": ["verificationService"],
                  "example": "verificationService"
              },
              "context": {
                  "type": "string",
                  "enum": ["dscsaSaleableReturn"],
                  "example": "dscsaSaleableReturn"
              },
              "positiveVerificationStatus": {
                  "type": "boolean",
                  "description": "Please refer to the rules defined for the context for further details of what constitutes successful verification.  If verification succeeds, use true.",
                  "example": true,
                  "enum": [true]
              },
              "negativeVerificationStatus": {
                  "type": "boolean",
                  "description": "Please refer to the rules defined for the context for further details of what constitutes unsuccessful verification.  If verification fails, use false and select a value for 'verificationFailureReason'.",
                  "example": false,
                  "enum": [false]
              },
              "verificationFailureReason": {
                  "type": "string",
                  "description": "Mandatory if verification failed. Used to indicate which PI element(s) did not match, or to indicate that no reason has been provided (at the discretion of the responder.  Values: 'No_match_GTIN_Serial': 'No match between GTIN and Serial Number', 'No_match_GTIN_Serial_Lot': 'No match between (GTIN and Serial Number) and Lot Number', 'No_match_GTIN_Serial_Expiry': 'No match between (GTIN and Serial Number) and Expiry Date', 'No_match_GTIN_Serial_Lot_Expiry': ' No match between (GTIN and Serial Number) and Lot Number and Expiry Date', 'No_reason_provided'",
                  "enum": [
                      "No_match_GTIN_Serial",
                      "No_match_GTIN_Serial_Lot",
                      "No_match_GTIN_Serial_Expiry",
                      "No_match_GTIN_Serial_Lot_Expiry",
                      "No_reason_provided"
                  ],
                  "example": "No_match_GTIN_Serial_Lot"
              },
              "additionalInformation": {
                  "type": "string",
                  "description": "Optional. May be used to provide additional information of the state of the SGTIN, for example, recalled. Instead of including an empty string or null, do NOT include this field unless is populated with a descriptive, standardised text value. Values: 'Recalled' \u2013 Product has been recalled and should not be sold. THIS IS NOT A FREE TEXT DESCRIPTION. Additional values will be standardised in the future. NOTE THAT EPCIS IS THE PREFERRED MECHANISM FOR INDICATING CHANGES IN PRODUCT DISPOSITION (e.g., recalled, stolen, decommissioned).",
                  "enum": [
                      "Recalled",
                      "Suspect"
                      ]
              },
              "ConnectivityCheckResponse": {
                  "required": ["responderGLN"],
                  "properties": {
                      "responderGLN": {"$ref": "#/components/schemas/gln"}
                  }
              },
              "PositiveVerificationResponse": {
                  "required": [
                      "verificationTimestamp",
                      "corrUUID",
                      "responderGLN",
                      "data"
                  ],
                  "properties": {
                      "verificationTimestamp": {"$ref": "#/components/schemas/timestamp"},
                      "corrUUID": {"$ref": "#/components/schemas/uuid"},
                      "responderGLN": {"$ref": "#/components/schemas/gln"},
                      "data": {
                          "type": "object",
                          "properties": {
                              "verified": {"$ref": "#/components/schemas/positiveVerificationStatus"},
                              "additionalInfo": {"$ref": "#/components/schemas/additionalInformation"}
                          },
                          "required": ["verified"]
                      }
                  }
              },
              "NegativeVerificationResponse": {
                  "required": [
                      "verificationTimestamp",
                      "corrUUID",
                      "responderGLN",
                      "data"
                  ],
                  "properties": {
                      "verificationTimestamp": {"$ref": "#/components/schemas/timestamp"},
                      "corrUUID": {"$ref": "#/components/schemas/uuid"},
                      "responderGLN": {"$ref": "#/components/schemas/gln"},
                      "data": {
                          "type": "object",
                          "properties": {
                              "verified": {"$ref": "#/components/schemas/negativeVerificationStatus"},
                              "verificationFailureReason": {"$ref": "#/components/schemas/verificationFailureReason"},
                              "additionalInfo": {"$ref": "#/components/schemas/additionalInformation"}
                          },
                          "required": [
                              "verified",
                              "verificationFailureReason"
                          ]
                      }
                  }
              }
          }
      }
  }